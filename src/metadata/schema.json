{
    "package": "Weebly",
    "tagline": "Weebly API",
    "description": "Weebly is a complete platform that allows anyone to start and grow an online business with curated website templates, powerful ecommerce and integrated marketing.",
    "image": "https:\/\/logo.clearbit.com\/weebly.com",
    "repo": "https:\/\/github.com\/RapidSoftwareSolutions\/Marketplace-Weebly-Package",
    "keywords": [
        "API",
        "analytics",
        "analyze",
        "reputation",
        "classification"
    ],
    "accounts": {
        "domain": "https:\/\/www.weebly.com\/",
        "credentials": [
            "apiKey",
            "apiSecret"
        ]
    },
    "steps": [
        "Please request apiKey and apiSecret at bd@weebly.com"
    ],
    "basicUrl": "https:\/\/api.weeblycloud.com\/",
    "blocks": [
        {
            "name": "getAccount",
            "description": "Get my account information",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "account",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash",
                    "Content-type": "application\/json"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "fullUpdateAccount",
            "description": "Updates the Weebly Cloud account fields for a given account. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "brandName",
                    "type": "String",
                    "info": "Your brand name. Displays in the footer of any free sites.",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_name"
                    }
                },
                {
                    "name": "brandUrl",
                    "type": "String",
                    "info": "Full url to your website. The link in the footer of a published site will go to this site. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_url"
                    }
                },
                {
                    "name": "upgradeUrl",
                    "type": "String",
                    "info": "Full url to your upgrade manager.",
                    "required": false,
                    "vendorSchema": {
                        "name": "upgrade_url"
                    }
                },
                {
                    "name": "publishUpsellUrl",
                    "type": "String",
                    "info": "Full url to your publish promotion.",
                    "required": false,
                    "vendorSchema": {
                        "name": "publish_upsell_url"
                    }
                },
                {
                    "name": "billingUrl",
                    "type": "String",
                    "info": " This url is only used with the cPanel plugin.",
                    "required": false,
                    "vendorSchema": {
                        "name": "billing_url"
                    }
                }
            ],
            "vendorRequest": {
                "url": "account",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "brand_name",
                            "brand_url",
                            "upgrade_url",
                            "publish_upsell_url",
                            "billing_url"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash",
                    "Content-type": "application\/json"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "partUpdateAccount",
            "description": "Updates the provided Weebly Cloud account fields for a given account. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "brandName",
                    "type": "String",
                    "info": "Your brand name. Displays in the footer of any free sites.",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_name"
                    }
                },
                {
                    "name": "brandUrl",
                    "type": "String",
                    "info": "Full url to your website. The link in the footer of a published site will go to this site. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_url"
                    }
                },
                {
                    "name": "upgradeUrl",
                    "type": "String",
                    "info": "Full url to your upgrade manager.",
                    "required": false,
                    "vendorSchema": {
                        "name": "upgrade_url"
                    }
                },
                {
                    "name": "publishUpsellUrl",
                    "type": "String",
                    "info": "Full url to your publish promotion.",
                    "required": false,
                    "vendorSchema": {
                        "name": "publish_upsell_url"
                    }
                },
                {
                    "name": "billingUrl",
                    "type": "String",
                    "info": " This url is only used with the cPanel plugin.",
                    "required": false,
                    "vendorSchema": {
                        "name": "billing_url"
                    }
                }
            ],
            "vendorRequest": {
                "url": "account",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "brand_name",
                            "brand_url",
                            "upgrade_url",
                            "publish_upsell_url",
                            "billing_url"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash",
                    "Content-type": "application\/json"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listSiteBlogs",
            "description": "Returns the blog_id, page_id, and title for all blogs on a given site.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/blog",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleBlog",
            "description": "Returns all fields for a specific blog",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "blogId",
                    "type": "String",
                    "info": "Id of the blog",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/blog\/{$data['blogId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listBlogPosts",
            "description": "Returns the post_id, post_title, created_date, site_id, and user_id for all posts for a given blog.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "blogId",
                    "type": "String",
                    "info": "Id of the blog",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/blog\/{$data['blogId']}\/post",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSinglePost",
            "description": "Returns all fields for a given blog post.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "blogId",
                    "type": "String",
                    "info": "Id of the blog",
                    "required": true
                },
                {
                    "name": "postId",
                    "type": "String",
                    "info": "Id of the post",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/blog\/{$data['blogId']}\/post\/{$data['postId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createPost",
            "description": "Creates a blog post for the given blog.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "blogId",
                    "type": "String",
                    "info": "Id of the blog",
                    "required": true
                },
                {
                    "name": "postBody",
                    "type": "String",
                    "info": "Body of the post",
                    "required": true,
                    "vendorSchema": {
                        "name": "post_body"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": false,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": false,
                    "vendorSchema": {
                        "name": "site_id"
                    }
                },
                {
                    "name": "postTitle",
                    "type": "String",
                    "info": "Title of the post",
                    "required": false,
                    "vendorSchema": {
                        "name": "post_title"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tage",
                        "type": "String",
                        "info": "Single tag"
                    },
                    "info": "Array of post tags",
                    "required": false
                },
                {
                    "name": "allowComments",
                    "type": "Select",
                    "options": [
                        "yes",
                        "no"
                    ],
                    "info": "Whether comments are allowed",
                    "required": false,
                    "vendorSchema": {
                        "name": "allow_comments"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/blog\/{$data['blogId']}\/post",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "post_body",
                            "user_id",
                            "site_id",
                            "post_title",
                            "tags",
                            "allow_comments"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "partPostUpdate",
            "description": "Updates a blog post. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "blogId",
                    "type": "String",
                    "info": "Id of the blog",
                    "required": true
                },
                {
                    "name": "postId",
                    "type": "String",
                    "info": "Id of the post",
                    "required": true
                },
                {
                    "name": "postBody",
                    "type": "String",
                    "info": "Body of the post",
                    "required": false,
                    "vendorSchema": {
                        "name": "post_body"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": false,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": false,
                    "vendorSchema": {
                        "name": "site_id"
                    }
                },
                {
                    "name": "postTitle",
                    "type": "String",
                    "info": "Title of the post",
                    "required": false,
                    "vendorSchema": {
                        "name": "post_title"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tage",
                        "type": "String",
                        "info": "Single tag"
                    },
                    "info": "Array of post tags",
                    "required": false
                },
                {
                    "name": "allowComments",
                    "type": "Select",
                    "options": [
                        "yes",
                        "no"
                    ],
                    "info": "Whether comments are allowed",
                    "required": false,
                    "vendorSchema": {
                        "name": "allow_comments"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/blog\/{$data['blogId']}\/post\/{$data['postId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "post_body",
                            "user_id",
                            "site_id",
                            "post_title",
                            "tags",
                            "allow_comments"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "fullPostUpdate",
            "description": "Replaces the blog post, using any given values. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "blogId",
                    "type": "String",
                    "info": "Id of the blog",
                    "required": true
                },
                {
                    "name": "postId",
                    "type": "String",
                    "info": "Id of the post",
                    "required": true
                },
                {
                    "name": "postBody",
                    "type": "String",
                    "info": "Body of the post",
                    "required": true,
                    "vendorSchema": {
                        "name": "post_body"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": false,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": false,
                    "vendorSchema": {
                        "name": "site_id"
                    }
                },
                {
                    "name": "postTitle",
                    "type": "String",
                    "info": "Title of the post",
                    "required": false,
                    "vendorSchema": {
                        "name": "post_title"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tage",
                        "type": "String",
                        "info": "Single tag"
                    },
                    "info": "Array of post tags",
                    "required": false
                },
                {
                    "name": "allowComments",
                    "type": "Select",
                    "options": [
                        "yes",
                        "no"
                    ],
                    "info": "Whether comments are allowed",
                    "required": false,
                    "vendorSchema": {
                        "name": "allow_comments"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/blog\/{$data['blogId']}\/post\/{$data['postId']}",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "post_body",
                            "user_id",
                            "site_id",
                            "post_title",
                            "tags",
                            "allow_comments"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deletePost",
            "description": "Deletes the given blog post.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "blogId",
                    "type": "String",
                    "info": "Id of the blog",
                    "required": true
                },
                {
                    "name": "postId",
                    "type": "String",
                    "info": "Id of the post",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/blog\/{$data['blogId']}\/post\/{$data['postId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listForms",
            "description": "\u200bReturns an array of forms for the given site.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "String",
                    "info": "Use this parameter to retrieve only forms that have a full text search match based on the form_name and site_title.",
                    "required": false
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                },
                {
                    "name": "sortby",
                    "type": "String",
                    "info": "Field name to sort on.",
                    "required": false
                },
                {
                    "name": "sortDirection",
                    "type": "Select",
                    "options": [
                        "asc",
                        "desc"
                    ],
                    "info": "Use asc for ascending sort or desc for descending sort.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sortdir"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/form",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "query",
                            "filterby",
                            "filterfor",
                            "sortby",
                            "sortdir",
                            "page",
                            "limit"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleForm",
            "description": "Returns a form, given the ID.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "formId",
                    "type": "String",
                    "info": "Id of the form",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/form\/{$data['formId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listFormEntries",
            "description": "\u200bReturns an array of form entries for the given site. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "formId",
                    "type": "String",
                    "info": "Id of the form",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "String",
                    "info": "Use this parameter to retrieve only forms that have a full text search match based on the form_name and site_title.",
                    "required": false
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                },
                {
                    "name": "sortDirection",
                    "type": "Select",
                    "options": [
                        "asc",
                        "desc"
                    ],
                    "info": "Use asc for ascending sort or desc for descending sort.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sortdir"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/form\/{$data['formId']}\/entry",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "query",
                            "filterby",
                            "filterfor",
                            "sortdir",
                            "page",
                            "limit"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleFormEntry",
            "description": "Returns a specific entry ID for a given form.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "formId",
                    "type": "String",
                    "info": "Id of the form",
                    "required": true
                },
                {
                    "name": "entryId",
                    "type": "String",
                    "info": "Id of the form entry",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/form\/{$data['formId']}\/entry\/{$data['entryId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listSiteMembers",
            "description": "\u200bReturns the following fields for all members of a given site",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "String",
                    "info": "Use this parameter to retrieve only forms that have a full text search match based on the form_name and site_title.",
                    "required": false
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                },
                {
                    "name": "sortby",
                    "type": "Select",
                    "options": [
                        "site_memeber_id",
                        "name",
                        "email"
                    ],
                    "info": "Field name to sort by. Sortable fields: site_memeber_id, name, email.",
                    "required": false
                },
                {
                    "name": "sortDirection",
                    "type": "Select",
                    "options": [
                        "asc",
                        "desc"
                    ],
                    "info": "Use asc for ascending sort or desc for descending sort.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sortdir"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/member",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "query",
                            "filterby",
                            "filterfor",
                            "sortby",
                            "sortdir",
                            "page",
                            "limit"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleMember",
            "description": "Returns all fields for the given member.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "memberId",
                    "type": "String",
                    "info": "Id of the member",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/member\/{$data['memberId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createMember",
            "description": "Creates a new member for the site.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "user email",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "user name",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "String",
                    "info": "user password",
                    "required": true
                },
                {
                    "name": "welcomeMessage",
                    "type": "String",
                    "info": "user welcome message",
                    "required": false,
                    "vendorSchema": {
                        "name": "welcome_message"
                    }
                },
                {
                    "name": "sendWelcomeMessage",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Whether to send welcome message",
                    "required": false,
                    "vendorSchema": {
                        "name": "send_welcome_message"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/member",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "email",
                            "name",
                            "password",
                            "welcome_message",
                            "send_welcome_message"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateMember",
            "description": "Updates the given properties of a member.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "memberId",
                    "type": "String",
                    "info": "Id of the member",
                    "required": true
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "user email",
                    "required": false
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "user name",
                    "required": false
                },
                {
                    "name": "groupIds",
                    "type": "List",
                    "structure": {
                        "name": "groupId",
                        "type": "String",
                        "info": "Single group id "
                    },
                    "info": "User groups",
                    "required": false,
                    "vendorSchema": {
                        "name": "group_ids"
                    }
                },
                {
                    "name": "pageIds",
                    "type": "List",
                    "structure": {
                        "name": "pageId",
                        "type": "String",
                        "info": "Single page id "
                    },
                    "info": "User pages",
                    "required": false,
                    "vendorSchema": {
                        "name": "page_ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/member\/{$data['memberId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "email",
                            "name",
                            "group_ids",
                            "page_ids"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteMember",
            "description": "Deletes the given member.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "memberId",
                    "type": "String",
                    "info": "Id of the member",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/member\/{$data['memberId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listSiteGroups",
            "description": "\u200bReturns an array of groups for the given site.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "String",
                    "info": "Use this parameter to retrieve only groups that have a full text search match based on the query string.",
                    "required": false
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                },
                {
                    "name": "sortby",
                    "type": "Select",
                    "options": [
                        "user_id",
                        "site_group_id",
                        "name"
                    ],
                    "info": "Field name to sort by. Sortable fields: user_id, site_group_id, name.",
                    "required": false
                },
                {
                    "name": "sortDirection",
                    "type": "Select",
                    "options": [
                        "asc",
                        "desc"
                    ],
                    "info": "Use asc for ascending sort or desc for descending sort.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sortdir"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/group",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "query",
                            "filterby",
                            "filterfor",
                            "sortby",
                            "sortdir",
                            "page",
                            "limit"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleGroup",
            "description": "Returns all fields for a given group.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Id of the group",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/group\/{$data['groupId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createGroup",
            "description": "Creates a new group.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "Name of the group",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/group",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "name"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateGroup",
            "description": "Updates a given group.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Id of the group",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "Group name",
                    "required": false
                },
                {
                    "name": "memberIds",
                    "type": "List",
                    "structure": {
                        "name": "memberId",
                        "type": "String",
                        "info": "Single member id "
                    },
                    "info": "group members",
                    "required": false,
                    "vendorSchema": {
                        "name": "member_ids"
                    }
                },
                {
                    "name": "pageIds",
                    "type": "List",
                    "structure": {
                        "name": "pageId",
                        "type": "String",
                        "info": "Single page id "
                    },
                    "info": "Group pages",
                    "required": false,
                    "vendorSchema": {
                        "name": "page_ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/group\/{$data['groupId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "name",
                            "member_ids",
                            "page_ids"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteGroup",
            "description": "Deletes the given group.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Id of the group",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/group\/{$data['groupId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listSitePages",
            "description": "\u200bReturns page_id, title, page_order, page_url, parent_id, and layout for an array of pages for a site. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "String",
                    "info": "Use this parameter to retrieve only groups that have a full text search match based on the query string.",
                    "required": false
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                },
                {
                    "name": "sortby",
                    "type": "Select",
                    "options": [
                        "page_id",
                        "title",
                        "layout"
                    ],
                    "info": "Field name to sort by. Sortable fields: page_id, title, layout.",
                    "required": false
                },
                {
                    "name": "sortDirection",
                    "type": "Select",
                    "options": [
                        "asc",
                        "desc"
                    ],
                    "info": "Use asc for ascending sort or desc for descending sort.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sortdir"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/page",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "query",
                            "filterby",
                            "filterfor",
                            "sortby",
                            "sortdir",
                            "page",
                            "limit"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSinglePage",
            "description": "Returns all fields for a given page.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "pageId",
                    "type": "String",
                    "info": "Id of the page",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/page\/{$data['pageId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updatePage",
            "description": "Can update the title for a page.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "pageId",
                    "type": "String",
                    "info": "Id of the page",
                    "required": true
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "Title of the page",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/page\/{$data['pageId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "title"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listPlans",
            "description": "Returns all available plans for a Weebly Cloud account.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "plan",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash",
                    "Content-type": "application\/json"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSinglePlan",
            "description": "Returns all available plans for a Weebly Cloud account.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "planId",
                    "type": "String",
                    "info": "Id of the plan",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "plan\/{$data['planId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash",
                    "Content-type": "application\/json"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSitePlan",
            "description": "Get the plan assigned to a given site.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/plan",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "assignSitePlan",
            "description": "Assign a plan to a given site.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "planId",
                    "type": "String",
                    "info": "Id of the plan",
                    "required": true,
                    "vendorSchema": {
                        "name": "plan_id"
                    }
                },
                {
                    "name": "term",
                    "type": "Number",
                    "info": "If no term is provided a monthly term (ex. term=1) is used as the default. ",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/plan",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "plan_id",
                            "term"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleSite",
            "description": "Retrieves site details for the given USER_ID and SITE_ID combination.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listUserSites",
            "description": "Retrieves all the sites for a given user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                },
                {
                    "name": "role",
                    "type": "Select",
                    "options": [
                        "owner",
                        "contributor"
                    ],
                    "info": "Use this parameter to only return sites that the current user has certain access rights to. If set to owner, only sites that user owns are returned. If set to contributor, only sites the user contributes to but does not own are returned.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "page",
                            "limit",
                            "role"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createSite",
            "description": "Creates a new site for a given user. The domain must be unique. If optional parameters are not provided, then defaults defined at the Weebly Cloud account level will be used. Optionally a site can be created by copying an existing site.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "domain",
                    "type": "String",
                    "info": "The FQDN of the site. ",
                    "required": true
                },
                {
                    "name": "brandName",
                    "type": "String",
                    "info": "Your brand name. Displays in the footer of any free sites. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_name"
                    }
                },
                {
                    "name": "brandUrl",
                    "type": "String",
                    "info": "Full url to your website. The link in the footer of a published site will go to this site. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_url"
                    }
                },
                {
                    "name": "publishUpsellUrl",
                    "type": "String",
                    "info": "Full url to your publish promotion. This url will be loaded in an iframe (640px W by 200px H) upon site publish and can be used to advertise other services.",
                    "required": false,
                    "vendorSchema": {
                        "name": "publish_upsell_url"
                    }
                },
                {
                    "name": "upgradeUrl",
                    "type": "String",
                    "info": "Full url to your upgrade manager. When a user is editing a site they may be prompted to upgrade their account to take advantage of more features. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "upgrade_url"
                    }
                },
                {
                    "name": "planId",
                    "type": "String",
                    "info": "Site plan id",
                    "required": false,
                    "vendorSchema": {
                        "name": "plan_id"
                    }
                },
                {
                    "name": "term",
                    "type": "Number",
                    "info": "Site plan term",
                    "required": false
                },
                {
                    "name": "timeZone",
                    "type": "String",
                    "info": "Timezone used on the site. Available here - http:\/\/cloud-developer.weebly.com\/uploads\/3\/0\/3\/1\/30316827\/timezones.json",
                    "required": false,
                    "vendorSchema": {
                        "name": "time_zone"
                    }
                },
                {
                    "name": "timeFormat",
                    "type": "Select",
                    "options": [
                        "12",
                        "24"
                    ],
                    "info": "Format used for time on the site. Values are 12 and 24.",
                    "required": false,
                    "vendorSchema": {
                        "name": "time_format"
                    }
                },
                {
                    "name": "dateFormat",
                    "type": "Select",
                    "options": [
                        "n\/j\/Y",
                        "j\/n\/Y"
                    ],
                    "info": "Format used for dates on the site. Values are n\/j\/Y for month\/day\/year and j\/n\/Y for day\/month\/year.",
                    "required": false,
                    "vendorSchema": {
                        "name": "date_format"
                    }
                },
                {
                    "name": "siteTitle",
                    "type": "String",
                    "info": "Site title",
                    "required": false,
                    "vendorSchema": {
                        "name": "site_title"
                    }
                },
                {
                    "name": "sourceUserId",
                    "type": "String",
                    "info": "User id of the source site",
                    "required": false,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "sourceSiteId",
                    "type": "String",
                    "info": "Site id of the source site",
                    "required": false,
                    "vendorSchema": {
                        "name": "site_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "domain",
                            "brand_name",
                            "brand_url",
                            "publish_upsell_url",
                            "upgrade_url",
                            "plan_id",
                            "term",
                            "time_zone",
                            "time_format",
                            "date_format",
                            "site_title",
                            "site_title"
                        ]
                    }
                ],
                "vendorFieldsStructure": [
                    {
                        "copy_source": {
                            "site_id": "{site_id}",
                            "user_id": "{user_id}"
                        }
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "partUpdateSite",
            "description": "Updates the provided properties of a given user's site. The domain must be unique.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "domain",
                    "type": "String",
                    "info": "The FQDN of the site. ",
                    "required": false
                },
                {
                    "name": "brandName",
                    "type": "String",
                    "info": "Your brand name. Displays in the footer of any free sites. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_name"
                    }
                },
                {
                    "name": "brandUrl",
                    "type": "String",
                    "info": "Full url to your website. The link in the footer of a published site will go to this site. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_url"
                    }
                },
                {
                    "name": "publishUpsellUrl",
                    "type": "String",
                    "info": "Full url to your publish promotion. This url will be loaded in an iframe (640px W by 200px H) upon site publish and can be used to advertise other services.",
                    "required": false,
                    "vendorSchema": {
                        "name": "publish_upsell_url"
                    }
                },
                {
                    "name": "upgradeUrl",
                    "type": "String",
                    "info": "Full url to your upgrade manager. When a user is editing a site they may be prompted to upgrade their account to take advantage of more features. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "upgrade_url"
                    }
                },
                {
                    "name": "timeZone",
                    "type": "String",
                    "info": "Timezone used on the site. Available here - http:\/\/cloud-developer.weebly.com\/uploads\/3\/0\/3\/1\/30316827\/timezones.json",
                    "required": false,
                    "vendorSchema": {
                        "name": "time_zone"
                    }
                },
                {
                    "name": "timeFormat",
                    "type": "Select",
                    "options": [
                        "12",
                        "24"
                    ],
                    "info": "Format used for time on the site. Values are 12 and 24.",
                    "required": false,
                    "vendorSchema": {
                        "name": "time_format"
                    }
                },
                {
                    "name": "dateFormat",
                    "type": "Select",
                    "options": [
                        "n\/j\/Y",
                        "j\/n\/Y"
                    ],
                    "info": "Format used for dates on the site. Values are n\/j\/Y for month\/day\/year and j\/n\/Y for day\/month\/year.",
                    "required": false,
                    "vendorSchema": {
                        "name": "date_format"
                    }
                },
                {
                    "name": "siteTitle",
                    "type": "String",
                    "info": "Site title",
                    "required": false,
                    "vendorSchema": {
                        "name": "site_title"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "domain",
                            "brand_name",
                            "brand_url",
                            "publish_upsell_url",
                            "upgrade_url",
                            "plan_id",
                            "term",
                            "time_zone",
                            "time_format",
                            "date_format",
                            "site_title",
                            "site_title"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "fullUpdateSite",
            "description": "Replaces the entire given site. The domain must be unique. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "domain",
                    "type": "String",
                    "info": "The FQDN of the site. ",
                    "required": true
                },
                {
                    "name": "brandName",
                    "type": "String",
                    "info": "Your brand name. Displays in the footer of any free sites. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "brand_name"
                    }
                },
                {
                    "name": "brandUrl",
                    "type": "String",
                    "info": "Full url to your website. The link in the footer of a published site will go to this site. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "brand_url"
                    }
                },
                {
                    "name": "publishUpsellUrl",
                    "type": "String",
                    "info": "Full url to your publish promotion. This url will be loaded in an iframe (640px W by 200px H) upon site publish and can be used to advertise other services.",
                    "required": true,
                    "vendorSchema": {
                        "name": "publish_upsell_url"
                    }
                },
                {
                    "name": "upgradeUrl",
                    "type": "String",
                    "info": "Full url to your upgrade manager. When a user is editing a site they may be prompted to upgrade their account to take advantage of more features. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "upgrade_url"
                    }
                },
                {
                    "name": "allowSsl",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Whether or not the SSL option has been enabled for this site.",
                    "required": true,
                    "vendorSchema": {
                        "name": "allow_ssl"
                    }
                },
                {
                    "name": "timeZone",
                    "type": "String",
                    "info": "Timezone used on the site. Available here - http:\/\/cloud-developer.weebly.com\/uploads\/3\/0\/3\/1\/30316827\/timezones.json",
                    "required": false,
                    "vendorSchema": {
                        "name": "time_zone"
                    }
                },
                {
                    "name": "timeFormat",
                    "type": "Select",
                    "options": [
                        "12",
                        "24"
                    ],
                    "info": "Format used for time on the site. Values are 12 and 24.",
                    "required": false,
                    "vendorSchema": {
                        "name": "time_format"
                    }
                },
                {
                    "name": "dateFormat",
                    "type": "Select",
                    "options": [
                        "n\/j\/Y",
                        "j\/n\/Y"
                    ],
                    "info": "Format used for dates on the site. Values are n\/j\/Y for month\/day\/year and j\/n\/Y for day\/month\/year.",
                    "required": false,
                    "vendorSchema": {
                        "name": "date_format"
                    }
                },
                {
                    "name": "siteTitle",
                    "type": "String",
                    "info": "Site title",
                    "required": true,
                    "vendorSchema": {
                        "name": "site_title"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "domain",
                            "brand_name",
                            "brand_url",
                            "publish_upsell_url",
                            "upgrade_url",
                            "time_zone",
                            "time_format",
                            "date_format",
                            "site_title",
                            "site_title",
                            "allow_ssl"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "publishSite",
            "description": "Publishes a given site for a given user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/publish",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "unpublishSite",
            "description": "Unpublishes a given site for a given user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/unpublish",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "generateLoginLink",
            "description": "Generates a one-time link that will direct users to the site specified. This method requires that the account is enabled.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/loginLink",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setPublishCredentials",
            "description": "Sets publish credentials for a given site. If a user's site will not be hosted by Weebly, publish credentials can be provided.  When these values are set, the site will be published to the location specified.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "publishHost",
                    "type": "String",
                    "info": "The hostname of the remote host that hosts the published site.",
                    "required": true,
                    "vendorSchema": {
                        "name": "publish_host"
                    }
                },
                {
                    "name": "publishUsername",
                    "type": "String",
                    "info": "The username used to authenticate",
                    "required": true,
                    "vendorSchema": {
                        "name": "publish_username"
                    }
                },
                {
                    "name": "publishPassword",
                    "type": "String",
                    "info": "The password used to authenticate",
                    "required": true,
                    "vendorSchema": {
                        "name": "publish_password"
                    }
                },
                {
                    "name": "publishPath",
                    "type": "String",
                    "info": "The absolute path of the remote host that hosts published site.",
                    "required": true,
                    "vendorSchema": {
                        "name": "publish_path"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/setPublishCredentials",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "publish_host",
                            "publish_username",
                            "publish_password",
                            "publish_path"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "restoreSite",
            "description": "When a site is restored the owner of the site is granted access to it in the exact state it was when it was deleted, including the Weebly plan assigned. Restoring a site does not issue an automatic publish",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "domain",
                    "type": "String",
                    "info": "Domain of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/restore",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "domain"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "disableSite",
            "description": "Suspends access to the given user's site in the editor by setting the suspended parameter to true. If a user attempts to access the site in the editor, an error is thrown.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/disable",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "enableSite",
            "description": "Re-enables a suspended site by setting the suspended parameter to false. Users can access the editor for the site. Sites are enabled by default when created.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/enable",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteSite",
            "description": "Deletes the Weebly site. The site will no longer show up to the user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSiteStore",
            "description": "Returns all fields for the site's store.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateSiteStore",
            "description": "Returns all fields for the site's store.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "companyName",
                    "type": "String",
                    "info": "The store's company name.",
                    "required": false,
                    "vendorSchema": {
                        "name": "company_name"
                    }
                },
                {
                    "name": "street",
                    "type": "String",
                    "info": "The store's street address",
                    "required": false
                },
                {
                    "name": "city",
                    "type": "String",
                    "info": "The store's city",
                    "required": false
                },
                {
                    "name": "state",
                    "type": "String",
                    "info": "The store's state",
                    "required": false
                },
                {
                    "name": "postalCode",
                    "type": "String",
                    "info": "The store's postal code",
                    "required": false,
                    "vendorSchema": {
                        "name": "postal_code"
                    }
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "The store's email",
                    "required": false
                },
                {
                    "name": "phone",
                    "type": "String",
                    "info": "The store's phone",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "company_name",
                            "street",
                            "city",
                            "state",
                            "postal_code",
                            "email",
                            "phone"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listStoreCategories",
            "description": "Returns all categories in a store",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "page",
                            "limit",
                            "filterby",
                            "filterfor"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countStoreCategories",
            "description": "Returns the number of categories for the given site, unless filtered or limited by search parameters.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "filterby",
                            "filterfor"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createStoreCategory",
            "description": "Creates a category.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "The name of the store category.",
                    "required": true
                },
                {
                    "name": "seoPageTitle",
                    "type": "String",
                    "info": "The meta tag title of the page embedded for search engines.",
                    "required": false,
                    "vendorSchema": {
                        "name": "seo_page_title"
                    }
                },
                {
                    "name": "seoPageDescription",
                    "type": "String",
                    "info": "The meta tag description of the page embedded for search engines.",
                    "required": false,
                    "vendorSchema": {
                        "name": "seo_page_description"
                    }
                },
                {
                    "name": "productIds",
                    "type": "List",
                    "structure": {
                        "name": "productId",
                        "type": "Number",
                        "info": "Single product id"
                    },
                    "info": "An array of product sku ids within the store category.",
                    "required": false,
                    "vendorSchema": {
                        "name": "product_ids"
                    }
                },
                {
                    "name": "parentCategoryId",
                    "type": "String",
                    "info": "The category id of the parent, if the category is a sub-category.",
                    "required": false,
                    "vendorSchema": {
                        "name": "parent_category_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "name",
                            "seo_page_title",
                            "seo_page_description",
                            "product_ids",
                            "parent_category_id"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleCategory",
            "description": "Returns all fields for the given category",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/{$data['categoryId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateCategory",
            "description": "Updates a category.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "The name of the store category.",
                    "required": false
                },
                {
                    "name": "seoPageTitle",
                    "type": "String",
                    "info": "The meta tag title of the page embedded for search engines.",
                    "required": false,
                    "vendorSchema": {
                        "name": "seo_page_title"
                    }
                },
                {
                    "name": "seoPageDescription",
                    "type": "String",
                    "info": "The meta tag description of the page embedded for search engines.",
                    "required": false,
                    "vendorSchema": {
                        "name": "seo_page_description"
                    }
                },
                {
                    "name": "productIds",
                    "type": "List",
                    "structure": {
                        "name": "productId",
                        "type": "Number",
                        "info": "Single product id"
                    },
                    "info": "An array of product sku ids within the store category.",
                    "required": false,
                    "vendorSchema": {
                        "name": "product_ids"
                    }
                },
                {
                    "name": "parentCategoryId",
                    "type": "String",
                    "info": "The category id of the parent, if the category is a sub-category.",
                    "required": false,
                    "vendorSchema": {
                        "name": "parent_category_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/{$data['categoryId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "name",
                            "seo_page_title",
                            "seo_page_description",
                            "product_ids",
                            "parent_category_id"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "replaceCategory",
            "description": "Replaces a category.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "The name of the store category.",
                    "required": true
                },
                {
                    "name": "seoPageTitle",
                    "type": "String",
                    "info": "The meta tag title of the page embedded for search engines.",
                    "required": false,
                    "vendorSchema": {
                        "name": "seo_page_title"
                    }
                },
                {
                    "name": "seoPageDescription",
                    "type": "String",
                    "info": "The meta tag description of the page embedded for search engines.",
                    "required": false,
                    "vendorSchema": {
                        "name": "seo_page_description"
                    }
                },
                {
                    "name": "productIds",
                    "type": "List",
                    "structure": {
                        "name": "productId",
                        "type": "Number",
                        "info": "Single product id"
                    },
                    "info": "An array of product sku ids within the store category.",
                    "required": false,
                    "vendorSchema": {
                        "name": "product_ids"
                    }
                },
                {
                    "name": "parentCategoryId",
                    "type": "String",
                    "info": "The category id of the parent, if the category is a sub-category.",
                    "required": false,
                    "vendorSchema": {
                        "name": "parent_category_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/{$data['categoryId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "name",
                            "seo_page_title",
                            "seo_page_description",
                            "product_ids",
                            "parent_category_id"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteCategory",
            "description": "Deletes the category.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/{$data['categoryId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listCategoryImages",
            "description": "Returns an array of images and all their fields for the category.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/{$data['categoryId']}\/image",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countCategoryImages",
            "description": "Returns the number of images for a category.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/{$data['categoryId']}\/image\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createCategoryImage",
            "description": "Returns the number of images for a category.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                },
                {
                    "name": "imageUrl",
                    "type": "String",
                    "info": "The URL to the product's image file. This is used in requests and the URL is returned in response.",
                    "required": true,
                    "vendorSchema": {
                        "name": "img_url"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/{$data['categoryId']}\/image",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "img_url"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleCategoryImage",
            "description": "Returns all fields for a given category image.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                },
                {
                    "name": "imageId",
                    "type": "String",
                    "info": "Id of the image",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/{$data['categoryId']}\/image\/{$data['imageId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteCategoryImage",
            "description": "Deletes the category image.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                },
                {
                    "name": "imageId",
                    "type": "String",
                    "info": "Id of the image",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/category\/{$data['categoryId']}\/image\/{$data['imageId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listStoreCoupons",
            "description": "Returns all coupons in a store",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/coupon",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "page",
                            "limit",
                            "filterby",
                            "filterfor"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countStoreCoupons",
            "description": "Returns the number of coupons for a store.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/coupon\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleStoreCoupon",
            "description": "Returns all fields for a given coupon.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "couponId",
                    "type": "String",
                    "info": "Id of the coupon",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/coupon\/{$data['couponId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateStoreCoupon",
            "description": "Updates a coupon.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "couponId",
                    "type": "String",
                    "info": "Id of the coupon",
                    "required": true
                },
                {
                    "name": "code",
                    "type": "String",
                    "info": "The coupon code the user enters.",
                    "required": false
                },
                {
                    "name": "type",
                    "type": "Select",
                    "options": [
                        "percent",
                        "absolute",
                        "shipping"
                    ],
                    "info": "The type of coupon. Use the following: percent: percentage discount absolute: an absolute amount discount shipping: free shipping",
                    "required": false
                },
                {
                    "name": "amount",
                    "type": "String",
                    "info": "The amount of the coupon, for example 5.00 for an absolute amount of $5.00. For percent types, enter a percentage amount, for example 20.00 for 20%.",
                    "required": false
                },
                {
                    "name": "criteria",
                    "type": "Select",
                    "options": [
                        "all",
                        "total_over",
                        "categories",
                        "products"
                    ],
                    "info": "The limiting criteria for applying a coupon. One of the following: all: no limitations, total_over: only orders over X dollar amount, categories: only orders containing products from specific categories, products: only orders containing specific products",
                    "required": false
                },
                {
                    "name": "criteriaAmount",
                    "type": "String",
                    "info": "The amount",
                    "required": true,
                    "vendorSchema": {
                        "name": "criteria_amount"
                    }
                },
                {
                    "name": "productIds",
                    "type": "List",
                    "structure": {
                        "name": "productId",
                        "type": "Number",
                        "info": "Single product id"
                    },
                    "info": "An array of product sku ids",
                    "required": false,
                    "vendorSchema": {
                        "name": "product_ids"
                    }
                },
                {
                    "name": "categoryIds",
                    "type": "List",
                    "structure": {
                        "name": "categoryId",
                        "type": "Number",
                        "info": "Single category id"
                    },
                    "info": "An array of category ids",
                    "required": false,
                    "vendorSchema": {
                        "name": "category_ids"
                    }
                },
                {
                    "name": "shippingRateIds",
                    "type": "List",
                    "structure": {
                        "name": "shippingRateId",
                        "type": "Number",
                        "info": "Single shipping rate id"
                    },
                    "info": "An array of shipping rate ids",
                    "required": false,
                    "vendorSchema": {
                        "name": "shipping_rate_ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/coupon\/{$data['couponId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "code",
                            "type",
                            "amount",
                            "criteria",
                            "criteria_amount",
                            "product_ids",
                            "category_ids",
                            "shipping_rate_ids"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createStoreCoupon",
            "description": "Creates a coupon.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "code",
                    "type": "String",
                    "info": "The coupon code the user enters.",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "Select",
                    "options": [
                        "percent",
                        "absolute",
                        "shipping"
                    ],
                    "info": "The type of coupon. Use the following: percent: percentage discount absolute: an absolute amount discount shipping: free shipping",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "String",
                    "info": "The amount of the coupon, for example 5.00 for an absolute amount of $5.00. For percent types, enter a percentage amount, for example 20.00 for 20%.",
                    "required": true
                },
                {
                    "name": "criteria",
                    "type": "Select",
                    "options": [
                        "all",
                        "total_over",
                        "categories",
                        "products"
                    ],
                    "info": "The limiting criteria for applying a coupon. One of the following: all: no limitations, total_over: only orders over X dollar amount, categories: only orders containing products from specific categories, products: only orders containing specific products",
                    "required": true
                },
                {
                    "name": "criteriaAmount",
                    "type": "String",
                    "info": "The amount",
                    "required": true,
                    "vendorSchema": {
                        "name": "criteria_amount"
                    }
                },
                {
                    "name": "productIds",
                    "type": "List",
                    "structure": {
                        "name": "productId",
                        "type": "Number",
                        "info": "Single product id"
                    },
                    "info": "An array of product sku ids",
                    "required": false,
                    "vendorSchema": {
                        "name": "product_ids"
                    }
                },
                {
                    "name": "categoryIds",
                    "type": "List",
                    "structure": {
                        "name": "categoryId",
                        "type": "Number",
                        "info": "Single category id"
                    },
                    "info": "An array of category ids",
                    "required": false,
                    "vendorSchema": {
                        "name": "category_ids"
                    }
                },
                {
                    "name": "shippingRateIds",
                    "type": "List",
                    "structure": {
                        "name": "shippingRateId",
                        "type": "Number",
                        "info": "Single shipping rate id"
                    },
                    "info": "An array of shipping rate ids",
                    "required": false,
                    "vendorSchema": {
                        "name": "shipping_rate_ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/coupon",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "code",
                            "type",
                            "amount",
                            "criteria",
                            "criteria_amount",
                            "product_ids",
                            "category_ids",
                            "shipping_rate_ids"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "replaceStoreCoupon",
            "description": "Replaces a coupon.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "couponId",
                    "type": "String",
                    "info": "Id of the coupon",
                    "required": true
                },
                {
                    "name": "code",
                    "type": "String",
                    "info": "The coupon code the user enters.",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "Select",
                    "options": [
                        "percent",
                        "absolute",
                        "shipping"
                    ],
                    "info": "The type of coupon. Use the following: percent: percentage discount absolute: an absolute amount discount shipping: free shipping",
                    "required": true
                },
                {
                    "name": "amount",
                    "type": "String",
                    "info": "The amount of the coupon, for example 5.00 for an absolute amount of $5.00. For percent types, enter a percentage amount, for example 20.00 for 20%.",
                    "required": true
                },
                {
                    "name": "criteria",
                    "type": "Select",
                    "options": [
                        "all",
                        "total_over",
                        "categories",
                        "products"
                    ],
                    "info": "The limiting criteria for applying a coupon. One of the following: all: no limitations, total_over: only orders over X dollar amount, categories: only orders containing products from specific categories, products: only orders containing specific products",
                    "required": true
                },
                {
                    "name": "criteriaAmount",
                    "type": "String",
                    "info": "The amount",
                    "required": true,
                    "vendorSchema": {
                        "name": "criteria_amount"
                    }
                },
                {
                    "name": "productIds",
                    "type": "List",
                    "structure": {
                        "name": "productId",
                        "type": "Number",
                        "info": "Single product id"
                    },
                    "info": "An array of product sku ids",
                    "required": false,
                    "vendorSchema": {
                        "name": "product_ids"
                    }
                },
                {
                    "name": "categoryIds",
                    "type": "List",
                    "structure": {
                        "name": "categoryId",
                        "type": "Number",
                        "info": "Single category id"
                    },
                    "info": "An array of category ids",
                    "required": false,
                    "vendorSchema": {
                        "name": "category_ids"
                    }
                },
                {
                    "name": "shippingRateIds",
                    "type": "List",
                    "structure": {
                        "name": "shippingRateId",
                        "type": "Number",
                        "info": "Single shipping rate id"
                    },
                    "info": "An array of shipping rate ids",
                    "required": false,
                    "vendorSchema": {
                        "name": "shipping_rate_ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/coupon\/{$data['couponId']}",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "code",
                            "type",
                            "amount",
                            "criteria",
                            "criteria_amount",
                            "product_ids",
                            "category_ids",
                            "shipping_rate_ids"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteStoreCoupon",
            "description": "Deletes coupon.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "couponId",
                    "type": "String",
                    "info": "Id of the coupon",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/coupon\/{$data['couponId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listStoreOrders",
            "description": "\u200bReturns an array of orders for the store",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "String",
                    "info": "Use this parameter to retrieve only forms that have a full text search match",
                    "required": false
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                },
                {
                    "name": "sortby",
                    "type": "Select",
                    "options": [
                        "order_date"
                    ],
                    "info": "Field name to sort on.",
                    "required": false
                },
                {
                    "name": "sortDirection",
                    "type": "Select",
                    "options": [
                        "asc",
                        "desc"
                    ],
                    "info": "Use asc for ascending sort or desc for descending sort.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sortdir"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "query",
                            "filterby",
                            "filterfor",
                            "sortby",
                            "sortdir",
                            "page",
                            "limit"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countStoreOrders",
            "description": "\u200bReturns the number of orders for a store",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleOrder",
            "description": "\u200bReturns all fields for a given order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listOrderInvoices",
            "description": "Returns an array of invoices for an order",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/billing",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countOrderInvoices",
            "description": "Returns the number of invoices for an order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/billing\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleOrderInvoice",
            "description": "Returns an invoice for a given order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "invoiceId",
                    "type": "String",
                    "info": "Id of the invoice",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/billing\/{$data['invoiceId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listInvoiceTransactions",
            "description": "Returns an array of transactions for an invoice",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "invoiceId",
                    "type": "String",
                    "info": "Id of the invoice",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/billing\/{$data['invoiceId']}\/transaction",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countInvoiceTransactions",
            "description": "Returns the number of transactions for an invoice.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "invoiceId",
                    "type": "String",
                    "info": "Id of the invoice",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/billing\/{$data['invoiceId']}\/transaction\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleInvoiceTransaction",
            "description": "Returns a transaction for a given invoice.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "invoiceId",
                    "type": "String",
                    "info": "Id of the invoice",
                    "required": true
                },
                {
                    "name": "transactionId",
                    "type": "String",
                    "info": "Id of the transaction",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/billing\/{$data['invoiceId']}\/transaction\/{$data['transactionId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listOrderItems",
            "description": "Returns an array of items for an order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/item",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countOrderItems",
            "description": "Returns the number of order items for an order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/item\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleOrderItem",
            "description": "Returns all order items for a given order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "itemId",
                    "type": "String",
                    "info": "Id of the item",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/item\/{$data['itemId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listOrderShipments",
            "description": "Returns an array of shipments for an order",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/shipment",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countOrderShipments",
            "description": "Returns the number of shipments for an order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/shipment\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleOrderShipment",
            "description": "Returns a given shipment for an order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "shipmentId",
                    "type": "String",
                    "info": "Id of the shipment",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/shipment\/{$data['shipmentId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "fullUpdateOrderShipment",
            "description": "\u200bUpdates the given fields of an order shipment, replacing any other fields with default values. If the tracking number or status are updated, a new Order Shipment Transaction is created and the status is updated to shipped.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "shipmentId",
                    "type": "String",
                    "info": "Id of the shipment",
                    "required": true
                },
                {
                    "name": "businessName",
                    "type": "String",
                    "info": "Business name of the shipping addressee, if applicable",
                    "required": false,
                    "vendorSchema": {
                        "name": "business_name"
                    }
                },
                {
                    "name": "fullName",
                    "type": "String",
                    "info": "Business name of the shipping addressee, if applicable",
                    "required": false,
                    "vendorSchema": {
                        "name": "full_name"
                    }
                },
                {
                    "name": "street",
                    "type": "String",
                    "info": "Street address of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "street"
                    }
                },
                {
                    "name": "city",
                    "type": "String",
                    "info": "City of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "city"
                    }
                },
                {
                    "name": "region",
                    "type": "String",
                    "info": "Region of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "region"
                    }
                },
                {
                    "name": "country",
                    "type": "String",
                    "info": "Country of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "country"
                    }
                },
                {
                    "name": "postalCode",
                    "type": "String",
                    "info": "Postal code of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "postal_code"
                    }
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "email"
                    }
                },
                {
                    "name": "phone",
                    "type": "String",
                    "info": "Phone of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "phone"
                    }
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "Title of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "title"
                    }
                },
                {
                    "name": "weight",
                    "type": "String",
                    "info": "Weight of the shipment package",
                    "required": false,
                    "vendorSchema": {
                        "name": "weight"
                    }
                },
                {
                    "name": "weightUnit",
                    "type": "Select",
                    "options": [
                        "kg",
                        "lb"
                    ],
                    "info": "The weight unit used for this order (kg or lb). If not set, defaults to the store's weight unit.",
                    "required": false,
                    "vendorSchema": {
                        "name": "weight_unit"
                    }
                },
                {
                    "name": "height",
                    "type": "String",
                    "info": "Height of the shipment package",
                    "required": false,
                    "vendorSchema": {
                        "name": "height"
                    }
                },
                {
                    "name": "width",
                    "type": "String",
                    "info": "Width of the shipment package",
                    "required": false,
                    "vendorSchema": {
                        "name": "width"
                    }
                },
                {
                    "name": "depth",
                    "type": "String",
                    "info": "Depth of the shipment package",
                    "required": false,
                    "vendorSchema": {
                        "name": "depth"
                    }
                },
                {
                    "name": "shippingProvider",
                    "type": "String",
                    "info": "Company providing the shipping",
                    "required": false,
                    "vendorSchema": {
                        "name": "shipping_provider"
                    }
                },
                {
                    "name": "trackingNumber",
                    "type": "String",
                    "info": "Tracking number for the shipment",
                    "required": false,
                    "vendorSchema": {
                        "name": "tracking_number"
                    }
                },
                {
                    "name": "status",
                    "type": "Select",
                    "options": [
                        "label_created",
                        "label_returned",
                        "shipped"
                    ],
                    "info": "Status of the shipment, either label_created, label_returned, shipped",
                    "required": false,
                    "vendorSchema": {
                        "name": "status"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/shipment\/{$data['shipmentId']}",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "business_name",
                            "full_name",
                            "street",
                            "region",
                            "country",
                            "postal_code",
                            "email",
                            "phone",
                            "title",
                            "weight",
                            "weight_unit",
                            "height",
                            "width",
                            "depth",
                            "shipping_provider",
                            "tracking_number",
                            "status"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "partUpdateOrderShipment",
            "description": "Updates the given fields of an order shipment. If the tracking number or status are updated, a new Order Shipment Transaction is created and the status is updated to shipped.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "shipmentId",
                    "type": "String",
                    "info": "Id of the shipment",
                    "required": true
                },
                {
                    "name": "businessName",
                    "type": "String",
                    "info": "Business name of the shipping addressee, if applicable",
                    "required": false,
                    "vendorSchema": {
                        "name": "business_name"
                    }
                },
                {
                    "name": "fullName",
                    "type": "String",
                    "info": "Business name of the shipping addressee, if applicable",
                    "required": false,
                    "vendorSchema": {
                        "name": "full_name"
                    }
                },
                {
                    "name": "street",
                    "type": "String",
                    "info": "Street address of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "street"
                    }
                },
                {
                    "name": "city",
                    "type": "String",
                    "info": "City of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "city"
                    }
                },
                {
                    "name": "region",
                    "type": "String",
                    "info": "Region of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "region"
                    }
                },
                {
                    "name": "country",
                    "type": "String",
                    "info": "Country of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "country"
                    }
                },
                {
                    "name": "postalCode",
                    "type": "String",
                    "info": "Postal code of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "postal_code"
                    }
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "email"
                    }
                },
                {
                    "name": "phone",
                    "type": "String",
                    "info": "Phone of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "phone"
                    }
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "Title of the shipping addressee",
                    "required": false,
                    "vendorSchema": {
                        "name": "title"
                    }
                },
                {
                    "name": "weight",
                    "type": "String",
                    "info": "Weight of the shipment package",
                    "required": false,
                    "vendorSchema": {
                        "name": "weight"
                    }
                },
                {
                    "name": "weightUnit",
                    "type": "Select",
                    "options": [
                        "kg",
                        "lb"
                    ],
                    "info": "The weight unit used for this order (kg or lb). If not set, defaults to the store's weight unit.",
                    "required": false,
                    "vendorSchema": {
                        "name": "weight_unit"
                    }
                },
                {
                    "name": "height",
                    "type": "String",
                    "info": "Height of the shipment package",
                    "required": false,
                    "vendorSchema": {
                        "name": "height"
                    }
                },
                {
                    "name": "width",
                    "type": "String",
                    "info": "Width of the shipment package",
                    "required": false,
                    "vendorSchema": {
                        "name": "width"
                    }
                },
                {
                    "name": "depth",
                    "type": "String",
                    "info": "Depth of the shipment package",
                    "required": false,
                    "vendorSchema": {
                        "name": "depth"
                    }
                },
                {
                    "name": "shippingProvider",
                    "type": "String",
                    "info": "Company providing the shipping",
                    "required": false,
                    "vendorSchema": {
                        "name": "shipping_provider"
                    }
                },
                {
                    "name": "trackingNumber",
                    "type": "String",
                    "info": "Tracking number for the shipment",
                    "required": false,
                    "vendorSchema": {
                        "name": "tracking_number"
                    }
                },
                {
                    "name": "status",
                    "type": "Select",
                    "options": [
                        "label_created",
                        "label_returned",
                        "shipped"
                    ],
                    "info": "Status of the shipment, either label_created, label_returned, shipped",
                    "required": false,
                    "vendorSchema": {
                        "name": "status"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/shipment\/{$data['shipmentId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "business_name",
                            "full_name",
                            "street",
                            "region",
                            "country",
                            "postal_code",
                            "email",
                            "phone",
                            "title",
                            "weight",
                            "weight_unit",
                            "height",
                            "width",
                            "depth",
                            "shipping_provider",
                            "tracking_number",
                            "status"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listOrderShipmentTransactions",
            "description": "Returns an array of transactions for a shipment",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "shipmentId",
                    "type": "String",
                    "info": "Id of the shipment",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/shipment\/{$data['shipmentId']}\/transaction",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countOrderShipmentTransactions",
            "description": "Returns the number of transactions for a shipment.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "shipmentId",
                    "type": "String",
                    "info": "Id of the shipment",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/shipment\/{$data['shipmentId']}\/transaction\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleOrderShipmentTransaction",
            "description": "Returns a given transaction for a shipment.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "orderId",
                    "type": "String",
                    "info": "Id of the order",
                    "required": true
                },
                {
                    "name": "shipmentId",
                    "type": "String",
                    "info": "Id of the shipment",
                    "required": true
                },
                {
                    "name": "transactionId",
                    "type": "String",
                    "info": "Id of the transaction",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/order\/{$data['orderId']}\/shipment\/{$data['shipmentId']}\/transaction\/{$data['transactionId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listStoreProducts",
            "description": "\u200bReturns an array of products for the store",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "query",
                    "type": "String",
                    "info": "Use this parameter to retrieve only forms that have a full text search match",
                    "required": false
                },
                {
                    "name": "filterby",
                    "type": "String",
                    "info": "Field name to set a filter on.",
                    "required": false
                },
                {
                    "name": "filterfor",
                    "type": "String",
                    "info": "Specify a range by including a comparison operator at the front of the string.Ex: >1454370743",
                    "required": false
                },
                {
                    "name": "sortby",
                    "type": "String",
                    "info": "Field name to sort on.",
                    "required": false
                },
                {
                    "name": "sortDirection",
                    "type": "Select",
                    "options": [
                        "asc",
                        "desc"
                    ],
                    "info": "Use asc for ascending sort or desc for descending sort.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sortdir"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Which page of results to return. Starts at 1.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "Number of results per page. Default 25, Max 200. Don't forget that raising the limit may affect performance.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "query",
                            "filterby",
                            "filterfor",
                            "sortby",
                            "sortdir",
                            "page",
                            "limit"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countStoreProducts",
            "description": "Returns the number of products for the store",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createProduct",
            "description": "Creates a new product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "The name of the product",
                    "required": true
                },
                {
                    "name": "skus",
                    "type": "List",
                    "structure": {
                        "name": "sku",
                        "type": "JSON",
                        "info": "Single sku object"
                    },
                    "info": "A list of all the product skus for this product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "name",
                            "skus"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleProduct",
            "description": "Returns all fields for a given product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateProduct",
            "description": "Updates a product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "Name of the product",
                    "required": false
                },
                {
                    "name": "shortDescription",
                    "type": "String",
                    "info": "The description of the product",
                    "required": false,
                    "vendorSchema": {
                        "name": "short_description"
                    }
                },
                {
                    "name": "published",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "True if the product is published and live on the site",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "name",
                            "short_description",
                            "published"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "replaceProduct",
            "description": "Replaces a product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "Name of the product",
                    "required": true
                },
                {
                    "name": "skus",
                    "type": "List",
                    "structure": {
                        "name": "sku",
                        "type": "JSON",
                        "info": "Single sku object"
                    },
                    "info": "A list of all the product skus for this product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "name",
                            "skus"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteProduct",
            "description": "Deletes the given product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listProductImages",
            "description": "Returns all fields for each image in an array of images for the product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/image",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countProductImages",
            "description": "Returns the number of images for a product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/image\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createProductImage",
            "description": "Creates a product image.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "imageUrl",
                    "type": "String",
                    "info": "The URL to the product's image file. This is used in requests and the URL is returned in response.",
                    "required": true,
                    "vendorSchema": {
                        "name": "img_url"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/image",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "img_url"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleProductImage",
            "description": "Returns all fields for a given image.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "imageId",
                    "type": "String",
                    "info": "Id of the image",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/image\/{$data['imageId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteProductImage",
            "description": "Deletes a product image.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "imageId",
                    "type": "String",
                    "info": "Id of the image",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/image\/{$data['imageId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listProductOptions",
            "description": "Gets an array of options for a product. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/option",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countProductOptions",
            "description": "Returns the number of options for a product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/option\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleProductOption",
            "description": "Returns all fields for a given option.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "optionId",
                    "type": "String",
                    "info": "Id of the option",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/option\/{$data['optionId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateProductOption",
            "description": "Updates the given product option.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "optionId",
                    "type": "String",
                    "info": "Id of the option",
                    "required": true
                },
                {
                    "name": "ownerId",
                    "type": "String",
                    "info": "Id of the owner",
                    "required": false,
                    "vendorSchema": {
                        "name": "owner_id"
                    }
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": false,
                    "vendorSchema": {
                        "name": "site_id"
                    }
                },
                {
                    "name": "siteProductId",
                    "type": "String",
                    "info": "Id of the site product",
                    "required": false,
                    "vendorSchema": {
                        "name": "site_product_id"
                    }
                },
                {
                    "name": "siteProductOptionId",
                    "type": "String",
                    "info": "Id of the site product option",
                    "required": false,
                    "vendorSchema": {
                        "name": "site_product_option_id"
                    }
                },
                {
                    "name": "choiceOrder",
                    "type": "String",
                    "info": "The various choices for this option name, in order.",
                    "required": false,
                    "vendorSchema": {
                        "name": "choice_order"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/option\/{$data['optionId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "owner_id",
                            "site_id",
                            "site_product_id",
                            "site_product_option_id",
                            "choice_order"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listProductSkus",
            "description": "Returns all fields for all SKUs for a product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/sku",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countProductSkus",
            "description": "Returns the number of SKUs for a product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/sku\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleProductSku",
            "description": "Returns all fields for a given SKU.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "skuId",
                    "type": "String",
                    "info": "Id of the sku",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/sku\/{$data['skuId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateProductSku",
            "description": "Updates a product SKU",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "skuId",
                    "type": "String",
                    "info": "Id of the sku",
                    "required": true
                },
                {
                    "name": "price",
                    "type": "String",
                    "info": "The price of this SKU",
                    "required": false
                },
                {
                    "name": "salePrice",
                    "type": "String",
                    "info": "The sale price of this SKU",
                    "required": false,
                    "vendorSchema": {
                        "name": "sale_price"
                    }
                },
                {
                    "name": "inventory",
                    "type": "String",
                    "info": "The inventory of this SKU",
                    "required": false
                },
                {
                    "name": "sku",
                    "type": "String",
                    "info": "A user facing SKU identifier",
                    "required": false
                },
                {
                    "name": "weight",
                    "type": "String",
                    "info": "The weight of this SKU",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/sku\/{$data['skuId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "price",
                            "sale_price",
                            "inventory",
                            "sku",
                            "weight"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listProductSkuOptions",
            "description": "Returns all fields for an array of option choices for a product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "skuId",
                    "type": "String",
                    "info": "Id of the sku",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/sku\/{$data['skuId']}\/optionchoice",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "countProductSkuOptions",
            "description": "Returns the number of option choices for a product.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "skuId",
                    "type": "String",
                    "info": "Id of the sku",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/sku\/{$data['skuId']}\/optionchoice\/count",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleProductSkuOption",
            "description": "Returns all fields for an option choice.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "productId",
                    "type": "String",
                    "info": "Id of the product",
                    "required": true
                },
                {
                    "name": "skuId",
                    "type": "String",
                    "info": "Id of the sku",
                    "required": true
                },
                {
                    "name": "optionId",
                    "type": "String",
                    "info": "Id of the option",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/store\/product\/{$data['productId']}\/sku\/{$data['skuId']}\/optionchoice\/{$data['optionId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listSubaccounts",
            "description": "Returns all subreseller accounts for the given reseller account. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "subaccount",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleSubaccount",
            "description": "Returns the given subreseller's account.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "subaccountId",
                    "type": "String",
                    "info": "Id of the subreseller",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "subaccount\/{$data['subaccountId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createCubaccount",
            "description": "Creates a subreseller.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "brandName",
                    "type": "String",
                    "info": "The brand name of the subreseller. Displays in the footer of any free sites.",
                    "required": true,
                    "vendorSchema": {
                        "name": "brand_name"
                    }
                },
                {
                    "name": "brandUrl",
                    "type": "String",
                    "info": "Full url to the subreseller's website. The link in the footer of a published site will go to this site. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "brand_url"
                    }
                },
                {
                    "name": "adminName",
                    "type": "String",
                    "info": "User that is an admin for this subreseller and will have access to the Cloud Admin for that subreseller.",
                    "required": true,
                    "vendorSchema": {
                        "name": "admin_name"
                    }
                },
                {
                    "name": "adminEmail",
                    "type": "String",
                    "info": "Email for the admin. Weebly Cloud uses the email as the username for logging into the Cloud Admin. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "admin_email"
                    }
                },
                {
                    "name": "portalDomain",
                    "type": "String",
                    "info": "Admin (eg: portaldomain.com\/admin) and the client portal, if enabled (eg: portaldomain.com\/portal). This is also the domain the end user will see when in the Weebly editor (eg: portaldomain.com\/editor)",
                    "required": false,
                    "vendorSchema": {
                        "name": "portal_domain"
                    }
                },
                {
                    "name": "testMode",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Whether or not this subreseller account is in test mode. By default, this is set to true when a subreseller is created. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "test_mode"
                    }
                },
                {
                    "name": "ecommerce",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Whether or not this subreseller's sites support ecommerce. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "ecommerce"
                    }
                },
                {
                    "name": "manualSiteCreation",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Whether or not this subreseller can create sites using the Cloud Admin.",
                    "required": false,
                    "vendorSchema": {
                        "name": "manual_site_creation"
                    }
                },
                {
                    "name": "publishSettings",
                    "type": "Select",
                    "options": [
                        "weebly",
                        "ftp"
                    ],
                    "info": " How this subreseller's sites are hosted and published. Valid values are weebly or ftp.",
                    "required": false,
                    "vendorSchema": {
                        "name": "publish_settings"
                    }
                },
                {
                    "name": "availablePlans",
                    "type": "List",
                    "structure": {
                        "name": "plan",
                        "type": "Select",
                        "options": [
                            "0",
                            "5",
                            "10",
                            "15"
                        ],
                        "info": "Single plan"
                    },
                    "info": "The Weebly plans this subreseller will provide. Valid values are Free - \"0\", Starter - \"5\", Pro - \"10\" and Business - \"15\".",
                    "required": false,
                    "vendorSchema": {
                        "name": "available_plans",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "subaccount",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "brand_name",
                            "brand_url",
                            "admin_name",
                            "admin_email",
                            "portal_domain",
                            "test_mode"
                        ]
                    }
                ],
                "vendorFieldsStructure": [
                    {
                        "settings": {
                            "ecommerce": "{ecommerce}",
                            "manual_site_creation": "{manual_site_creation}",
                            "publish_settings": "{publish_settings}",
                            "available_plans": "{available_plans}"
                        }
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createSubaccountKey",
            "description": "Creates an encrypted API Key for the subreseller.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "subaccountId",
                    "type": "String",
                    "info": "Id of the subreseller",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "subaccount\/{$data['subaccountId']}\/apicredentials",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateSubacoount",
            "description": "Updates the provided subreseller account fields for a given account. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "subaccountId",
                    "type": "String",
                    "info": "Id of the subreseller",
                    "required": true
                },
                {
                    "name": "brandName",
                    "type": "String",
                    "info": "The brand name of the subreseller. Displays in the footer of any free sites.",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_name"
                    }
                },
                {
                    "name": "brandUrl",
                    "type": "String",
                    "info": "Full url to the subreseller's website. The link in the footer of a published site will go to this site. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "brand_url"
                    }
                },
                {
                    "name": "portalDomain",
                    "type": "String",
                    "info": "Admin (eg: portaldomain.com\/admin) and the client portal, if enabled (eg: portaldomain.com\/portal). This is also the domain the end user will see when in the Weebly editor (eg: portaldomain.com\/editor)",
                    "required": false,
                    "vendorSchema": {
                        "name": "portal_domain"
                    }
                },
                {
                    "name": "suspended",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Whether or not this subreseller account is suspended",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "subaccount\/{$data['subaccountId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "brand_name",
                            "brand_url",
                            "portal_domain",
                            "suspended"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listTeamMembers",
            "description": "Returns all team members (Cloud Admin users) for this account. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "team",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleTeamMember",
            "description": "Returns the given team member.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "teamMemberId",
                    "type": "String",
                    "info": "Id of the team member",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "team\/{$data['teamMemberId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createTeamMemberLoginLink",
            "description": "Generates a one-time use link to log a team member into the Cloud Admin.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "teamMemberId",
                    "type": "String",
                    "info": "Id of the team member",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "team\/{$data['teamMemberId']}\/loginLink",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listCloudThemes",
            "description": "Lists all custom Cloud themes you've created.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "hosts\/theme",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createCloudtheme",
            "description": "Adds a new custom Cloud theme to your repository. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "themeName",
                    "type": "String",
                    "info": "Name given to a theme",
                    "required": true,
                    "vendorSchema": {
                        "name": "theme_name"
                    }
                },
                {
                    "name": "themeZipLink",
                    "type": "String",
                    "info": "Publicly accessible url that points to the zip file containing the theme contents",
                    "required": true,
                    "vendorSchema": {
                        "name": "theme_zip"
                    }
                }
            ],
            "vendorRequest": {
                "url": "hosts\/theme",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "theme_name",
                            "theme_zip"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateCloudTheme",
            "description": "Updates a given theme.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "themeId",
                    "type": "String",
                    "info": "Id of the theme",
                    "required": true
                },
                {
                    "name": "themeName",
                    "type": "String",
                    "info": "Name given to a theme",
                    "required": true,
                    "vendorSchema": {
                        "name": "theme_name"
                    }
                }
            ],
            "vendorRequest": {
                "url": "hosts\/theme\/{$data['themeId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "theme_name"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteCloudTheme",
            "description": "Deletes a given theme.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "themeId",
                    "type": "String",
                    "info": "Id of the theme",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "hosts\/theme\/{$data['themeId']}",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listUserThemes",
            "description": "Creates a new theme in the user account.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/theme",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createUserTheme",
            "description": "Lists all themes available to the given user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "themeName",
                    "type": "String",
                    "info": "Name given to a theme",
                    "required": true,
                    "vendorSchema": {
                        "name": "theme_name"
                    }
                },
                {
                    "name": "themeZipLink",
                    "type": "String",
                    "info": "Publicly accessible url that points to the zip file containing the theme contents",
                    "required": true,
                    "vendorSchema": {
                        "name": "theme_zip"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/theme",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "theme_name",
                            "theme_zip"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setSiteTheme",
            "description": "Sets the theme for a given site. This theme change takes place immediately, but won't be seen on the published site until next publish. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "siteId",
                    "type": "String",
                    "info": "Id of the site",
                    "required": true
                },
                {
                    "name": "themeId",
                    "type": "String",
                    "info": "Id of theme",
                    "required": true,
                    "vendorSchema": {
                        "name": "theme_id"
                    }
                },
                {
                    "name": "isCustom",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Depicts whether the theme is a custom theme or not. Custom themes are added by a user or added via the Weebly Cloud API. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "is_custom"
                    }
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/site\/{$data['siteId']}\/theme",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "theme_id",
                            "is_custom"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserInfo",
            "description": "Returns the details for a given Weebly user associated with your Weebly Cloud account.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createUser",
            "description": "Creates a Weebly user in your Weebly Cloud account. The email address must be unique to all of Weebly or an error will be thrown. If your account is in test mode, all users created through the API will be flagged as test users.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "email of the user",
                    "required": true
                },
                {
                    "name": "testMode",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Denotes whether a user is a test user or not. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "test_mode"
                    }
                },
                {
                    "name": "language",
                    "type": "Select",
                    "options": [
                        "da",
                        "de",
                        "en",
                        "es",
                        "fr",
                        "it",
                        "ja",
                        "nl",
                        "no",
                        "pl",
                        "pt",
                        "ru",
                        "sv",
                        "tr",
                        "zh"
                    ],
                    "info": "A two letter language code to set the user's default language. The supported languages with their two character codes: Danish - da  German - de English - en Spanish - es French - fr Italian - it Japanese - ja Dutch - nl Norwegian - no Polish - pl Portuguese - pt Russian - ru Swedish - sv Turkish - tr Chinese (simplified) - zh",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "email",
                            "test_mode",
                            "language"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "fullUpdateUser",
            "description": "Updates an existing Weebly user in your Weebly Cloud account. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "email of the user",
                    "required": true
                },
                {
                    "name": "testMode",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Denotes whether a user is a test user or not. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "test_mode"
                    }
                },
                {
                    "name": "language",
                    "type": "Select",
                    "options": [
                        "da",
                        "de",
                        "en",
                        "es",
                        "fr",
                        "it",
                        "ja",
                        "nl",
                        "no",
                        "pl",
                        "pt",
                        "ru",
                        "sv",
                        "tr",
                        "zh"
                    ],
                    "info": "A two letter language code to set the user's default language. The supported languages with their two character codes: Danish - da  German - de English - en Spanish - es French - fr Italian - it Japanese - ja Dutch - nl Norwegian - no Polish - pl Portuguese - pt Russian - ru Swedish - sv Turkish - tr Chinese (simplified) - zh",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "email",
                            "test_mode",
                            "language"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "partUpdateUser",
            "description": "Updates the provided fields of an existing Weebly user in your Weebly Cloud account. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "email of the user",
                    "required": false
                },
                {
                    "name": "testMode",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Denotes whether a user is a test user or not. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "test_mode"
                    }
                },
                {
                    "name": "language",
                    "type": "Select",
                    "options": [
                        "da",
                        "de",
                        "en",
                        "es",
                        "fr",
                        "it",
                        "ja",
                        "nl",
                        "no",
                        "pl",
                        "pt",
                        "ru",
                        "sv",
                        "tr",
                        "zh"
                    ],
                    "info": "A two letter language code to set the user's default language. The supported languages with their two character codes: Danish - da  German - de English - en Spanish - es French - fr Italian - it Japanese - ja Dutch - nl Norwegian - no Polish - pl Portuguese - pt Russian - ru Swedish - sv Turkish - tr Chinese (simplified) - zh",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}",
                "method": "patch",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "email",
                            "test_mode",
                            "language"
                        ]
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "enableUser",
            "description": "Enables a user account after an account has been disabled. Enabling a user account will allow users to log into the editor. When a user is created, their account is automatically enabled.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/enable",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "disableUser",
            "description": "Disables a user account. When a user account is disabled, the user will no longer be able to log into the editor. If an attempt to create a login link is made on a disabled account, an error is thrown.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/disable",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createUserLoginLink",
            "description": "Generates a one-time link that will direct users to the editor for the last site that was modified in the account. This method requires that the account is enabled and that the account has at least one site.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "Your API key",
                    "required": true
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "Your API secret",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "user\/{$data['userId']}\/loginLink",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "X-Public-Key": "{$data['apiKey']}",
                    "X-Signed-Request-Hash": "$hash"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        }
    ]
}